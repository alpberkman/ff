
: NOP 0 ;
: LIT 1 ;
2 : HALT APP ;

3 : DUP APP ;
4 : DROP APP ;
5 : SWAP APP ;
6 6 5 7 : PUSH APP APP APP APP ;
6 5 7 7 : POP APP APP APP APP ;
8 : PICKP APP ;
9 : PICKR APP ;

: JMP 10 ;
: JZ 11 ;

: CALL 12 ;
: RET 13 ;

14 : EQ APP ;
15 : NEQ APP ;
16 : LT APP ;
17 : GT APP ;

18 : AND APP ;
19 : OR APP ;
20 : XOR APP ;
21 : SHR APP ;
22 : SHL APP ;

23 : ADD APP ;
24 : SUB APP ;
25 : MUL APP ;
26 : DIV APP ;
27 : MOD APP ;

28 : LDC APP ;
29 : STRC APP ;
30 : LDB APP ;
31 : STRB APP ;

32 : LDS APP ;
33 : STRS APP ;

34 : LDP APP ;
35 : STRP APP ;
36 : LDR APP ;
37 : STRR APP ;

38 : LDI APP ;
39 : STRI APP ;
40 : LDH APP ;
41 : STRH APP ;
42 : LDL APP ;
43 : STRL APP ;

44 : KEY APP ;
45 : EMIT APP ;

46 : CSZ APP ;

50 : DEB APP ;




: APP LDH STRB LDH 1 ADD STRH ;


: LIT
	LIT LDH STRB
	LDH 1 ADD STRH
	LDH STRC
	LDH CSZ ADD STRH
;

: NOP NOP APP ;


: JMP
	LDH 1 ADD
	666 LIT
	JMP APP
;

: JZ
	LDH 1 ADD
	666 LIT
	JZ APP
;


: CALL CALL APP ;


: RET RET APP ;


: TRUE -1 ;
: FALSE 0 ;


: LEQ GT -1 XOR ;
: GEQ LT -1 XOR ;
: BET PUSH 1 PICKP LEQ SWAP POP LEQ AND ;


: IMMEDIATE LDL CSZ ADD DUP LDB 1 6 SHL OR SWAP STRB ;
: VISIBLE LDL CSZ ADD DUP LDB 1 7 SHL OR SWAP STRB ; IMMEDIATE
: SELF
	LDL CSZ ADD LDB 31 AND 
	LDL CSZ ADD 1 ADD ADD
	JMP STRC
; IMMEDIATE


: IF JZ ; IMMEDIATE
: THEN LDH SWAP STRC ; IMMEDIATE
: ELSE JMP SWAP LDH SWAP STRC ; IMMEDIATE


: ( KEY 41 NEQ IF SELF THEN ; IMMEDIATE
: \ KEY 10 NEQ IF SELF THEN ; IMMEDIATE
: WARN KEY
	DUP 92 EQ IF
		KEY DUP 10 EQ IF
			32 EMIT DROP DROP
		ELSE
			SWAP EMIT EMIT
		THEN
		SELF
	THEN
	DUP EMIT 10 NEQ IF SELF THEN
; IMMEDIATE

: EXIT RET ; IMMEDIATE
: BYE HALT ;


: ALLOT LDH ADD STRH ;


: BEGIN LDH ; IMMEDIATE
: AGAIN JMP STRC ; IMMEDIATE
: UNTIL JZ STRC ; IMMEDIATE
: WHILE JZ ; IMMEDIATE
: REPEAT SWAP JMP STRC LDH SWAP STRC ; IMMEDIATE


: LAST LDL ;
: NEXT LDC ;
: N-NEXT 0 LAST PUSH
	BEGIN 1 PICKP 1 PICKP GT WHILE
		POP NEXT PUSH 1 ADD
	REPEAT DROP DROP POP
; WARN n-next doesnt stop at 0
: FORGET LDL LDC STRL ;


: DUMP DUP
	CSZ ADD DUP LDB 31 AND SWAP 1 ADD
	SWAP 1 PICKP ADD SWAP
	BEGIN 1 PICKP 1 PICKP GT WHILE DUP LDB EMIT 1 ADD REPEAT
	32 EMIT
	DROP DROP
	DUP 0 NEQ IF LDC SELF ELSE DROP THEN
;
: DUMP LDL DUMP 10 EMIT ;
FORGET FORGET WARN this dump function is forgotten
(
: DUMP DUP DUP CSZ ADD LDB 1 7 SHL AND IF
        CSZ ADD DUP LDB 31 AND SWAP 1 ADD \ Get the starting address and the length
        SWAP 1 PICKP ADD SWAP \ Calculate the end address
        BEGIN 1 PICKP 1 PICKP GT WHILE DUP LDB EMIT 1 ADD REPEAT \ Print the word
        32 EMIT \ Print space
        DROP DROP \ Remove the addresses 
	ELSE DROP THEN
	DUP 0 NEQ IF LDC SELF THEN DROP \ Call itself if it hasn' t reached the end of the list
; WARN this dump function only prints visible words
)



: CR ( --) 13 EMIT 10 EMIT ;


: . 48 EMIT 120 EMIT PUSH CSZ 8 MUL 0
	BEGIN 1 PICKP 1 PICKP GT WHILE
		POP DUP 4 SHL PUSH 
		CSZ 8 MUL 4 SUB SHR 15 AND 
		DUP 0 9 BET IF 48 ELSE 55 THEN 
		ADD EMIT
		4 ADD
	REPEAT POP DROP DROP DROP
;

: N-INVIS N-NEXT CSZ ADD DUP LDB 1 7 SHL XOR SWAP STRB ;
WARN n-invis still counts the invisible words because n-next does it too


: NOT -1 XOR ;

: CLEAR 27 EMIT 99 EMIT ;




clear


