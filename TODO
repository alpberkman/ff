['] LITERAL POSTONE LITERAL EXECUTE

: POSTPONE ' ,  ; IMMEDIATE
: POSTPONE ' ,  ; IMMEDIATE
: ['] ' POSTONE LITERAL ; IMMEDIATE

??
: ?? POSTPONE DUP
     POSTPONE IF
     ' postpone literal POSTPONE EXECUTE
     POSTPONE THEN
; immediate


0
5 special case
5 ENTRY-FIND
0 code

EDIT CONSTANT AND VARIABLE IN C FILE

C words
['] postpone immediate? literal? ;
: ' create does>



: ENUM ( -- )
  CREATE 0 ,
  DOES> DUP @ DUP 1+ ROT ! CONSTANT
;


: ARRAY ( n -- )
  CREATE CELLS ALLOT
  DOES> SWAP CELLS +
;

: CONSTANT CREATE , DOES> @ ;
: VARIABLE CREATE CELL ALLOT ;

: CREATE
    make-header
    here postpone literal
;

: DOES> ;


\            CREATE  BUTTONS  ' RING ,  ' OPEN ,  ' LAUGH ,  ' CRY ,
\            : BUTTON   ( nth --)    0 MAX  3 MIN
\                    CELLS  BUTTONS  +  @  EXECUTE  ;



(
Create without does>

In F83, create will create a dictionary entry that returns the address of the next available location in data space. The ANSI standard is essentially the same, adding specifications as to alignment.

Therefore, if all that is wanted is to return an address, does> is not needed. Adding it will not change the results, but will cost in memory and time. To create an 80-byte buffer:

    create buffer 80 allot

Now, executing buffer returns the first address of the alloted area.
)
